{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useFrom.js","components/notes/NoteAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/iuReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_DATABASEURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","response","ok","json","cloudResponse","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","note","push","id","data","types","activeNote","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormSate","handleInputChange","target","name","value","NoteAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.494c2170.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASEURL,\r\n    projectId: process.env.REACT_APP_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}\r\n","export const fileUpload = async (file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dthaljq5k/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'journal-app');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const response = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (response.ok) {\r\n            const cloudResponse = await response.json();\r\n\r\n            return cloudResponse.secure_url;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch(error) {\r\n        throw error;\r\n    }\r\n}   ","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async (uid) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(note => {\r\n        notes.push({\r\n            id: note.id,\r\n            ...note.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n}","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Start Finish',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note save',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async(dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async(dispatch, getState) => {\r\n        const {active: activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        dispatch(startSaveNote(activeNote));\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async(dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormSate = initialState) => {\r\n        setValues(newFormSate);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NoteAppBar = () => {\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes);\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#file-selector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de Agosto 2020</span>\r\n            <input\r\n                id=\"file-selector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handlePictureClick}\r\n                > \r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useFrom';\r\nimport { NoteAppBar } from './NoteAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n    const {active: note} = useSelector(state => state.notes);\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const {body, title, id} = formValues;\r\n    const activeId = useRef(note.id);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, {...formValues}));\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NoteAppBar />\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some Awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                    name=\"title\"\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                    name=\"body\"\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    <div className=\"notes__image\">\r\n                        <img\r\n                            src={note.url}\r\n                            alt=\"Paisaje\"\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n             <p>\r\n                 Select something\r\n                 <br />\r\n                 Or create an entry\r\n             </p>\r\n             <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from '../types/types';\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return(dispatch) => {\r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({user}) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch(e => {\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async({ user }) => {\r\n                await user.updateProfile({\r\n                    displayName: name\r\n                })\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(e => {\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName))\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n});\r\n\r\n\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, {date, title, body, url}));\r\n    }\r\n    \r\n    return (\r\n        <div\r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={handleEntryClick}\r\n        >\r\n            {\r\n                url &&\r\n                <div\r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                >\r\n                </div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n    const {notes} = useSelector(state => state.notes);\r\n    \r\n    return (\r\n        <div className=\"journal__entries \">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry\r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n            </div>\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\n\r\nexport const JournalScreen = () => {\r\n    const {active} = useSelector(state => state.notes);\r\n    \r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? <NoteScreen />\r\n                        : <NothingSelected />\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useFrom';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const {loading} = useSelector(state => state.ui)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'mauriciog87@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form\r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with Social Networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\n\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/useFrom';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'Mauricio',\r\n        email: 'mauriciog87@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            return false;\r\n        }\r\n        \r\n        dispatch(removeError());\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form\r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                {\r\n                    msgError && \r\n                    (<div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>)\r\n                }\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n            </button>\r\n            <Link\r\n                to=\"/auth/login\"\r\n                className=\"link\"\r\n            >\r\n                Already registered?\r\n            </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path=\"/auth/login\"\r\n                    component={LoginScreen}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/auth/register\"\r\n                    component={RegisterScreen}\r\n                />\r\n                <Redirect to=\"/auth/register\" />\r\n            </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async(user) => {\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(startLoadingNotes(user.uid));\r\n                setIsLoggedIn(true);\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false);\r\n        });\r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n    if (checking) {\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                    />\r\n                </Switch>\r\n            </div>           \r\n        </Router>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading: \r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state, \r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/iuReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from '../types/types';\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n    document.getElementById('root')\n    \n);\n"],"sourceRoot":""}